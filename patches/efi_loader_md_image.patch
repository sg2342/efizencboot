diff --git a/stand/efi/loader/conf.c b/stand/efi/loader/conf.c
index 21737293968..61258ba8958 100644
--- a/stand/efi/loader/conf.c
+++ b/stand/efi/loader/conf.c
@@ -35,7 +35,14 @@ __FBSDID("$FreeBSD$");
 
 extern struct devsw vdisk_dev;
 
+#ifdef MD_IMAGE_SIZE
+extern struct devsw md_dev;
+#endif
+
 struct devsw *devsw[] = {
+#ifdef MD_IMAGE_SIZE
+	&md_dev,
+#endif
 	&efipart_fddev,
 	&efipart_cddev,
 	&efipart_hddev,
diff --git a/stand/efi/loader/main.c b/stand/efi/loader/main.c
index ee55366e0c4..9679c0025e8 100644
--- a/stand/efi/loader/main.c
+++ b/stand/efi/loader/main.c
@@ -293,6 +293,22 @@ probe_zfs_currdev(uint64_t guid)
 }
 #endif
 
+#ifdef MD_IMAGE_SIZE
+static bool
+probe_md_currdev()
+{
+	/* defined in md.c */
+	extern struct devsw md_dev;
+
+	char *devname;
+	struct devdesc currdev;
+	currdev.d_dev = &md_dev;
+	currdev.d_unit = 0;
+	set_currdev_devdesc(&currdev);
+	return (sanity_check_currdev());
+}
+#endif
+
 static bool
 try_as_currdev(pdinfo_t *hd, pdinfo_t *pp)
 {
@@ -569,6 +585,11 @@ find_currdev(bool do_bootmgr, bool is_last,
 	}
 #endif /* EFI_ZFS_BOOT */
 
+#ifdef MD_IMAGE_SIZE
+	if (probe_md_currdev())
+		return 0;
+#endif
+
 	/*
 	 * Try to find the block device by its handle based on the
 	 * image we're booting. If we can't find a sane partition,
diff --git a/stand/libsa/Makefile b/stand/libsa/Makefile
index 6ac1d900104..e0ff51511d2 100644
--- a/stand/libsa/Makefile
+++ b/stand/libsa/Makefile
@@ -91,6 +91,7 @@ SRCS+=	_setjmp.S
 .PATH: ${SRCTOP}/contrib/bzip2
 CFLAGS+= -DBZ_NO_STDIO -DBZ_NO_COMPRESS
 
+CFLAGS+= -I${BOOTSRC}/common
 SRCS+=bzlib.c crctable.c decompress.c huffman.c randtable.c
 
 # decompression functionality from zlib
